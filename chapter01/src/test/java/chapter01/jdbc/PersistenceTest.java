package chapter01.jdbc;

import chapter01.pojo.MessageEntity;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import static org.testng.Assert.*;
public class PersistenceTest {
    Connection getConnection() throws SQLException {
        return DriverManager.getConnection("jdbc:h2:./db1","sa","");
    }


    @BeforeClass
    public void setUp() throws SQLException {
        String DROP = "drop table messages if exists";
        String CREATE = "create table messages("+
                "id BIGINT GENERATED BY DEFAULT AS IDENTITY "+
                "PRIMARY KEY ,"+
                "text VARCHAR(256) NOT NULL"+
                ")";

        try(Connection connection = getConnection()){
            try(
                    PreparedStatement ps =connection.prepareStatement(DROP)){
                ps.execute();
            }
            try(
                    PreparedStatement ps = connection.prepareStatement(CREATE)){
                ps.execute();
            }
        }catch (SQLException ex){
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }


    public chapter01.pojo.MessageEntity saveMessage(String text){
        final String  INSERT = "insert into messages(text) values (?)";
        chapter01.pojo.MessageEntity message = null;
        try (Connection connection = getConnection()) {
            try (PreparedStatement ps = connection.prepareStatement(INSERT, Statement.RETURN_GENERATED_KEYS)){
                ps.setString(1,text);
                ps.execute();
                try(ResultSet keys = ps.getGeneratedKeys()){
                    if(!keys.next()){
                        throw new SQLException("No generated Keys");
                    }
                    message = new MessageEntity(text, keys.getLong(1));
                }catch (SQLException e){
                    e.printStackTrace();
                    throw new RuntimeException(e);
                }
            }
        } catch (SQLException throwables) {
            throwables.printStackTrace();
        }
        return message;
    }

    @Test
    public void readMessage(){
        final String text = "Hello World !";
        MessageEntity messageEntity = saveMessage(text);
        final String SELECT = "SELECT id, text from messages";
        List<MessageEntity> messageEntityList = new ArrayList<>();
        try(Connection connection = getConnection()){
            try(PreparedStatement ps = connection.prepareStatement(SELECT)){
                try(ResultSet set = ps.executeQuery()){
                    while (set.next()){
                        MessageEntity ms = new MessageEntity();
                        ms.setId(set.getLong(1));
                        ms.setText(set.getString(2));
                        messageEntityList.add(ms);
                    }
                }
            }
        }catch (SQLException e){
            e.printStackTrace();
            throw new RuntimeException(e);
        }
        assertEquals(messageEntityList.size(),1);
        for(MessageEntity m : messageEntityList){
            System.out.println(m.toString());
        }
        assertEquals(messageEntityList.get(0),messageEntity);
    }
}
